@model PhotoForum.Models.ViewModel.SearchViewModel
@{
    ViewData["Title"] = "Search";
}
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/lib/bootstrap/dist/css/cyborg.css">
<link rel="stylesheet" href="/css/grid.css">
<link rel="stylesheet" href="~/css/ProfileCard.css">
<style>
    .body-content {
        display: relative;
    }

    .user-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(35vh, 1fr));
        gap: 10px;
        margin: 10px;
    }

    .card {
        position: static;
        max-height: 55vh;
        overflow: hidden;
        margin: 10px;
    }

    .content {
        display: none;
    }

    .mybuttons {
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        gap: 30px;
        padding: 50px 0;
        margin-top: 20px; 
        margin-bottom: 50px;
        border-bottom: 2px solid #333;
    }

    .button-spacing {
        margin-top: 2px; 
    }

    .popup {
        display: none;
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 200px;
        background-color: white;
        box-shadow: 0px 0px 10px rgba(0,0,0,0.5);
        padding: 10px;
        border-radius: 5px;
        z-index: 1000;
    }

    .close-btn {
        cursor: pointer;
        position: absolute;
        right: 10px;
        top: 20;
    }

    h4 {
        text-align: center;
        font-size: 2em;
        color: #333;
        margin: 20px 0;
        padding-top: 20px;
    }

</style>

<div>
    @if (Model.Users.Any() || Model.Posts.Any())
    {
        <div class="button-spacing">
            <div style="mybuttons">
                <input type="checkbox" class="btn-check" name="options" id="option1" value="option1" autocomplete="off" checked>
                <label class="btn" for="option1">Photographers</label>

                <input type="checkbox" class="btn-check hide" name="options" id="option2" value="option2" autocomplete="off" fdprocessedid="2b69ts">
                <label class="btn" for="option2">Photos</label>

                <input type="checkbox" class="btn-check hide" name="options" id="option3" autocomplete="off">
                <label class="btn" for="option3">All</label>

                <div class="btn-group" style="buttons-custom">
                    <button type="button" class="btn active dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        Sort Users
                    </button>
                    <ul class="dropdown-menu" id="userSortMenu">
                        <li><a class="dropdown-item" href="#" data-sort="UsernameAsc">Username Ascending</a></li>
                        <li><a class="dropdown-item" href="#" data-sort="UsernameDesc">Username Descending</a></li>
                    </ul>
                </div>

                <div class="btn-group" style="buttons-custom">
                    <button type="button" class="btn active dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        Sort Posts
                    </button>
                    <ul class="dropdown-menu" id="postSortMenu">
                        <li><a class="dropdown-item" href="#" data-sort="Newest">Newest First</a></li>
                        <li><a class="dropdown-item" href="#" data-sort="Oldest">Oldest First</a></li>
                    </ul>
                </div>
            </div>
       </div>
        <div class="content-container">
            <div class="content" id="content1">
                @if (Model.Users.Any())
                {
                    <h4>Users</h4>
                    <div class="user-grid">
                        @foreach (var user in Model.Users)
                        {
                            <div class="card" style="max-height: 55vh; min-width: 35vh; overflow: hidden; display: inline-block; margin: 10px;">
                               <img src="~/content/avatar2.png" alt="@user.Username" style="width:66%">
                               <h3>
                                    <a href="@Url.Action("UserPosts", "User", new { username = user.Username })" class="user-card">@user.Username</a>
                                </h3>
                                <p class="title" style="margin: 10px;">Creator</p>
                                <p style="margin: 10px;"> @user.FirstName @user.LastName</p>
                                <div class="social-links">
                                    <a href="#"><i class="fa fa-dribbble"></i></a>
                                    <a href="#"><i class="fa fa-twitter"></i></a>
                                    <a href="#"><i class="fa fa-linkedin"></i></a>
                                    <a href="#"><i class="fa fa-facebook"></i></a>
                                </div>

                                <button class="contact-button" data-email="@user.Email">Contact</button>

                                <div class="popup">
                                    <span class="close-btn">&times;</span>
                                    <p>Email: <span class="email-placeholder"></span></p>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>No users found.</p>
                }
                <div id="popup" class="popup" style="display: none;">
                    <span onclick="hidePopup()" class="close-btn">&times;</span>
                    <p id="email">Email: Loading...</p>
                </div>
            </div>
            <div class="content" id="content2">
                @if (Model.Posts.Any())
                {
                    <div>
                        <h4>Posts</h4>
                        <div class="masonry">
                            @foreach (var post in Model.Posts)
                            {
                                <div class="item">
                                    <a href="@Url.Action("Index", "Post", new { id = post.Id })">
                                        <img src="@post.PhotoUrl" alt="Post Image">
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <p>No posts found.</p>
                }
            </div>
        </div>
    }
    else
    {
        <p>No results found for your search criteria.</p>
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function toggleContent() {
                var content1 = document.getElementById('content1');
                var content2 = document.getElementById('content2');

                if (document.getElementById('option1').checked) {
                    content1.style.display = 'block';
                    content2.style.display = 'none';
                } else if (document.getElementById('option2').checked) {
                    content1.style.display = 'none';
                    content2.style.display = 'block';
                } else if (document.getElementById('option3').checked) {
                    content1.style.display = 'block';
                    content2.style.display = 'block';
                }
            }

            // Function to handle sorting
            function sortContent(userSortOrder, postSortOrder) {
                var baseUrl = '@Url.Action("Index", "Search")';
                var searchQuery = '?searchString=' + '@Model.SearchString';
                var userSortQuery = userSortOrder ? '&userSortOrder=' + userSortOrder : '';
                var postSortQuery = postSortOrder ? '&postSortOrder=' + postSortOrder : '';

                var option1 = document.getElementById('option1').checked ? '&option=users' : '';
                var option2 = document.getElementById('option2').checked ? '&option=posts' : '';
                var option3 = document.getElementById('option3').checked ? '&option=all' : '';

                window.location.href = baseUrl + searchQuery + userSortQuery + postSortQuery + option1 + option2 + option3;
            }

            // Event delegation for user sort menu
            document.getElementById('userSortMenu').addEventListener('click', function (event) {
                var sortOption = event.target.getAttribute('data-sort');
                if (sortOption) {
                    sortContent(sortOption, null);
                }
            });

            // Event delegation for post sort menu
            document.getElementById('postSortMenu').addEventListener('click', function (event) {
                var sortOption = event.target.getAttribute('data-sort');
                if (sortOption) {
                    sortContent(null, sortOption);
                }
            });

            // Add change event listeners to radio buttons
            document.getElementById('option1').addEventListener('change', toggleContent);
            document.getElementById('option2').addEventListener('change', toggleContent);
            document.getElementById('option3').addEventListener('change', toggleContent);

            // Initialize content display based on the selected option
            var selectedOption = '@ViewBag.SelectedOption';
            if (selectedOption === 'users') {
                document.getElementById('option1').checked = true;
            } else if (selectedOption === 'posts') {
                document.getElementById('option2').checked = true;
            } else if (selectedOption === 'all') {
                document.getElementById('option3').checked = true;
            }
            toggleContent();
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Function to toggle popup visibility
            function togglePopup(button) {
                var popup = button.nextElementSibling;
                var email = button.getAttribute('data-email');
                var emailPlaceholder = popup.querySelector('.email-placeholder');

                if (popup.style.display === 'none' || !popup.style.display) {
                    emailPlaceholder.textContent = email;
                    popup.style.display = 'block';
                } else {
                    emailPlaceholder.textContent = ''; // Clear the email when closing
                    popup.style.display = 'none';
                }
            }

            // Function to close popup when clicking the close button
            function closePopup(button) {
                var popup = button.closest('.popup');
                var emailPlaceholder = popup.querySelector('.email-placeholder');

                emailPlaceholder.textContent = ''; // Clear the email
                popup.style.display = 'none';
            }

            // Add click event listeners to contact buttons
            var contactButtons = document.querySelectorAll('.contact-button');
            contactButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    togglePopup(button);
                });
            });

            // Add click event listeners to close buttons
            var closeButtons = document.querySelectorAll('.close-btn');
            closeButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    closePopup(button);
                });
            });
        });
        window.location.href = '@Url.Action("UserPosts", "User")' + '?username=' + encodeURIComponent(username);
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
</div>